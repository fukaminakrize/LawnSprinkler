stav - prehlad (zapnute ventily,predpoved pocasia, stav vody ?, najblizsie naplanovane ulohy, prebiahajuce ulohy (progress bar))
	- logy

ovladanie - manual (zoznam spinacov, switch)
		- scheduler (zoznam uloh, pridanie cez modal (cas, dlzka, ktore dni (checkbox); Job model, mal by metodu na inicializaciu cronu, volana funkcia by najprv zapla port, nastartovala timer a potom ho vypla))

nastavenia - spinace (pridanie cez modal, zoznam spinacov a ich gpio port)
			- emailove notifikacie

odhlasenie



http://getbootstrap.com/examples/dashboard/

http://untame.net/2013/05/how-to-build-a-single-page-site-with-twitter-bootstraps-navigation-tabs-a-fixed-sidebar/

http://www.bootply.com/mL7j0aOINa


Linux prereqs:
	google: raspberry pi mongo node
	init script generated using https://www.npmjs.com/package/initd-node
	apt-get install tmux psmisc htop
	cp /usr/share/zoneinfo/Europe/Bratislava /etc/localtime 
scheduler - zaciatocny cas, pridavanie portov s trvanim


jobExecutor: pri aktivovani, nacita vsetky ulohy a vytvori im cron ulohy
	pri spusteni nacasovanej ulohy, pomocou asyncu naplanuje zapinanie a vypinanie portov


master port - nezahrnovat pri ponuke pri tvorbe faz v planovaci

pri deaktivovani beziacej ulohy, vypnut zapnute porty

login/pass dat do configu










/*
var express = require('express');
var app = express();

app.get('/', function(req, res) {
        console.log(new Date().toISOString());
        setTimeout(function() {
                console.log("after 45 mins");
        }, 1000*60*45);
        res.send("blah");
});

var server = app.listen(3000, function () {
  var host = server.address().address;
  var port = server.address().port;

  console.log('Example app listening at http://%s:%s', host, port);
});
*/
na kompe ide, na rp nie, uvidime co rp2